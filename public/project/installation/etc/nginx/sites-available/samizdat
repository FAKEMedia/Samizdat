upstream samizdat {
#	server 127.0.0.1:3000;
  server unix:/sites/Samizdat/bin/samizdat.sock;
}


server {
  listen 0.0.0.0:443 ssl http2 backlog=4096 default_server;
  listen [::]:443 ipv6only=on ssl http2 backlog=4096 default_server;
  server_name _;

  include snippets/ssl-example.com.conf;
  include snippets/ssl-params.conf;
  gzip_static on;
  http2_push_preload on;

  root /sites/Samizdat/public;
  index index.html;
  client_max_body_size 30M;

  access_log /var/log/samizdat.access.log combined buffer=64k flush=5m;
  error_log /var/log/samizdat.error.log;

	location / {
    disable_symlinks on;
    gzip_static on;
    gzip_proxied expired no-cache no-store private auth;
    try_files $uri $uri/index.html @samizdat;
	}

  location @samizdat {
    proxy_buffering off;
    proxy_pass http://samizdat;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location ~* \.(?:jpe?g|png|gif|mov|mp4|mp3|woff|webm)$ {
    expires 8d;
    add_header Pragma public;
    add_header Cache-Control "public";
    gzip off;
    gzip_static off;
  }

  location ~* \.(?:ico|css|js|svg|pdf)$ {
    expires 8d;
    add_header Pragma public;
    add_header Cache-Control "public";
    gzip_vary on;
  }

  location ~* \.(?:webp)$ {
    expires 8d;
    add_header Pragma public;
    add_header Cache-Control "public";
    gzip off;
    gzip_static off;
    try_files $uri @samizdat;
  }
}

server {
  listen 0.0.0.0:80 default_server;
  listen [::]:80 default_server;
  server_name _;
  root /sites/Samizdat/public;
  log_not_found off;
  log_subrequest off;
  access_log off;
  return 301 https://example.com$request_uri;
}
