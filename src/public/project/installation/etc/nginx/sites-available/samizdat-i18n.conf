# Internationalization (i18n) Configuration
# ----------------------------------------
# This configuration enables language-specific content serving based on the "language" cookie.
# The system will attempt to serve content with language-specific suffixes before falling back
# to the default files.
#
# How it works:
# 1. The $cookie_language variable captures the user's language preference from the cookie
# 2. The map directive converts the language code to a filename suffix (e.g., "_sv" for Swedish)
# 3. In the location / block, try_files will attempt to find files with that suffix before
#    falling back to default files
#
# Example: If a user has language=sv cookie and requests /about/
#   Nginx will try these files in order:
#   1. /about_sv.html - Look for language-specific HTML file at current URL level
#   2. /about_sv.md - Look for language-specific Markdown file at current URL level
#   3. /about/_sv.html - Look for language-specific HTML file inside directory
#   4. /about/index_sv.html - Look for language-specific index file
#   5. /about/ - Look for the directory itself
#   6. /about/index.html - Look for default index file
#   7. Pass to @samizdat handler if nothing found
#
# To add more languages:
# 1. Add new entries to this map
# 2. Add appropriate translations in the content files

map $cookie_language $lang_suffix {
  default "";  # Default/fallback when no cookie or unrecognized language
  en "";       # English is the default language with no suffix
  sv "_sv";    # Swedish
  de "_de";    # German
  es "_es";    # Spanish
  fr "_fr";    # French
  ru "_ru";    # Russian
  pl "_pl";    # Polish
  pt "_pt";    # Portuguese
  ar "_ar";    # Arabic
  hi "_hi";    # Hindi
}

upstream samizdat {
#	server 127.0.0.1:3000;
  server unix:/sites/Samizdat/bin/samizdat.sock;
}


server {
  listen 0.0.0.0:443 ssl http2 backlog=4096 default_server;
  listen [::]:443 ipv6only=on ssl http2 backlog=4096 default_server;
  server_name _;

  include snippets/ssl-example.com.conf;
  include snippets/ssl-params.conf;
  gzip_static on;
  http2_push_preload on;

  root /sites/Samizdat/public;
  index index.html;
  client_max_body_size 30M;

  access_log /var/log/samizdat.access.log combined buffer=64k flush=5m;
  error_log /var/log/samizdat.error.log;

  location / {
    disable_symlinks on;
    gzip_static on;
    gzip_proxied expired no-cache no-store private auth;
    
    # Language-specific content serving priority order:
    # 1. $uri$lang_suffix.html - Try language-specific HTML file (e.g., /about_sv.html)
    # 2. $uri$lang_suffix.md - Try language-specific Markdown file (e.g., /about_sv.md)
    # 3. $uri/$lang_suffix.html - Try language-specific HTML file in subdirectory (e.g., /about/_sv.html)
    # 4. $uri/index$lang_suffix.html - Try directory with language-specific index (e.g., /about/index_sv.html)
    # 5. $uri - Try the requested path as-is (could be a directory or a file)
    # 6. $uri/index.html - Try default index file in directory
    # 7. @samizdat - Pass to Mojolicious backend if no static file found
    try_files 
      $uri$lang_suffix.html 
      $uri$lang_suffix.md
      $uri/$lang_suffix.html
      $uri/index$lang_suffix.html 
      $uri 
      $uri/index.html 
      @samizdat;
  }

  location @samizdat {
    proxy_buffering off;
    proxy_pass http://samizdat;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location ~* \.(?:jpe?g|png|gif|mov|mp4|mp3|woff|webm)$ {
    expires 8d;
    add_header Pragma public;
    add_header Cache-Control "public";
    gzip off;
    gzip_static off;
  }

  location ~* \.(?:ico|css|js|svg|pdf)$ {
    expires 8d;
    add_header Pragma public;
    add_header Cache-Control "public";
  }

  location ~* \.(?:webp)$ {
    expires 8d;
    add_header Pragma public;
    add_header Cache-Control "public";
    gzip off;
    gzip_static off;
    try_files $uri @samizdat;
  }
}

server {
  listen 0.0.0.0:80 default_server;
  listen [::]:80 default_server;
  server_name _;
  root /sites/Samizdat/public;
  log_not_found off;
  log_subrequest off;
  access_log off;
  return 301 https://example.com$request_uri;
}