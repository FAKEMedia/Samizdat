#!/bin/sh

# PROVIDE: myapp
# REQUIRE: LOGIN postgresql redis
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable myapp:
# myapp_enable="YES"
# myapp_user="www"
# myapp_group="www"
# myapp_dir="/usr/local/www/myapp"
# myapp_pidfile="/var/run/myapp.pid"
# myapp_logfile="/var/log/myapp.log"
# myapp_mode="production"
# myapp_watchlist="-w ./templates -w ./lib -w ./myapp.yml"

. /etc/rc.subr

name="myapp"
rcvar=myapp_enable

load_rc_config $name

: ${myapp_enable="NO"}
: ${myapp_user="www"}
: ${myapp_group="www"}
: ${myapp_dir="/usr/local/www/myapp"}
: ${myapp_pidfile="${myapp_dir}/bin/myapp.pid"}
: ${myapp_logfile="/var/log/myapp.log"}
: ${myapp_mode="production"}
: ${myapp_watchlist="-w ./lib -w ./templates -w ./myapp.yml"}

pidfile="${myapp_pidfile}"

# Use morbo for development mode, hypnotoad for production
if [ "${myapp_mode}" = "development" ]; then
    command="/usr/local/bin/morbo"
    command_args="-m development -l http+unix://bin%2F${name}.sock -l http://0.0.0.0:3000 -v ${myapp_watchlist} ./bin/${name}"
    procname="perl"  # morbo runs as perl process
else
    command="/usr/local/bin/hypnotoad"
    command_args="./bin/${name}"
    procname="hypnotoad"
fi

required_dirs="${myapp_dir}"
myapp_prestart()
{
    # Set environment for the daemon
    export MOJO_MODE="${myapp_mode}"
    export MOJO_HOME="${myapp_dir}"
    export HOME="${myapp_dir}"
    export PWD="${myapp_dir}"
    
    # Additional debug flags for development mode
    if [ "${myapp_mode}" = "development" ]; then
        export MOJO_DAEMON_DEBUG=1
        export DBI_TRACE=SQL
    fi
    
    # Ensure PID file directory exists
    install -d -o "${myapp_user}" -g "${myapp_group}" -m 755 "$(dirname ${myapp_pidfile})"
    
    # Ensure log file exists with proper permissions  
    touch "${myapp_logfile}"
    chown "${myapp_user}:${myapp_group}" "${myapp_logfile}"
    chmod 640 "${myapp_logfile}"
    
    # Change to app directory - this affects where su starts
    cd "${myapp_dir}"
}

start_precmd="myapp_prestart"

# Custom stop command - different for dev vs production
myapp_stop()
{
    if [ -f "${myapp_pidfile}" ]; then
        echo "Stopping ${name}."
        if [ "${myapp_mode}" = "development" ]; then
            # For morbo, just kill the process
            kill -TERM $(cat "${myapp_pidfile}")
            rm -f "${myapp_pidfile}"
        else
            # For hypnotoad, use graceful shutdown
            cd "${myapp_dir}"
            export MOJO_MODE="${myapp_mode}"
            export MOJO_HOME="${myapp_dir}"
            /usr/local/bin/hypnotoad -s ./bin/${name}
        fi
    else
        echo "${name} is not running."
        return 1
    fi
}

stop_cmd="myapp_stop"

# Custom reload command - only works for production mode
myapp_reload()
{
    if [ "${myapp_mode}" = "development" ]; then
        echo "Reload not supported in development mode. Use restart instead."
        return 1
    else
        echo "Reloading ${name} (graceful restart)."
        cd "${myapp_dir}"
        export MOJO_MODE="${myapp_mode}"
        export MOJO_HOME="${myapp_dir}"
        /usr/local/bin/hypnotoad ./bin/${name}
    fi
}

reload_cmd="myapp_reload"

# Restart just uses reload since hypnotoad handles it gracefully
restart_cmd="myapp_reload"

extra_commands="reload"

run_rc_command "$1"