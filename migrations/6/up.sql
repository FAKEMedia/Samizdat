-- Diff code generated with pgModeler (PostgreSQL Database Modeler)
-- pgModeler version: 0.9.4
-- Diff date: 2024-05-23 22:26:27
-- Source model: samizdat
-- Database: samizdat
-- PostgreSQL version: 13.0

-- [ Diff summary ]
-- Dropped objects: 0
-- Created objects: 30
-- Changed objects: 0

SET search_path = public,pg_catalog,customer;
-- ddl-end --


-- [ Created objects ] --
-- object: customer | type: SCHEMA --
-- DROP SCHEMA IF EXISTS customer CASCADE;
CREATE SCHEMA customer;
-- ddl-end --
ALTER SCHEMA customer OWNER TO samizdat;
-- ddl-end --

-- object: customer.entityroleusers | type: TABLE --
-- DROP TABLE IF EXISTS customer.entityroleusers CASCADE;
CREATE TABLE customer.entityroleusers
(
  roleuserid BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  roleid     INTEGER NOT NULL,
  userid     BIGINT  NOT NULL,
  customerid BIGINT,
  CONSTRAINT entityroleusers_pk PRIMARY KEY (roleuserid)
);
-- ddl-end --
ALTER TABLE customer.entityroleusers
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.invoices | type: TABLE --
-- DROP TABLE IF EXISTS customer.invoices CASCADE;
CREATE TABLE customer.invoices
(
  invoiceid   BIGINT        NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  customerid  BIGINT,
  currencyid  INTEGER,
  invoicedate DATE                   DEFAULT NOW(),
  debt        NUMERIC(8, 0) NOT NULL DEFAULT 0,
  CONSTRAINT invoices_pk PRIMARY KEY (invoiceid)
);
-- ddl-end --
ALTER TABLE customer.invoices
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.customers | type: TABLE --
-- DROP TABLE IF EXISTS customer.customers CASCADE;
CREATE TABLE customer.customers
(
  customerid   BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  contactid    BIGINT,
  orgnoid      BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  entitytypeid INTEGER,
  CONSTRAINT customers_pk PRIMARY KEY (customerid)
);
-- ddl-end --
ALTER TABLE customer.customers
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.invoiceitems | type: TABLE --
-- DROP TABLE IF EXISTS customer.invoiceitems CASCADE;
CREATE TABLE customer.invoiceitems
(
  invoiceitemid BIGINT       NOT NULL GENERATED ALWAYS AS IDENTITY,
  invoiceid     BIGINT,
  description   VARCHAR(191) NOT NULL,
  number        INTEGER,
  price         NUMERIC(8, 0),
  articleid     BIGINT,
  CONSTRAINT invoiceitems_pk PRIMARY KEY (invoiceitemid)
);
-- ddl-end --
ALTER TABLE customer.invoiceitems
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.orgnos | type: TABLE --
-- DROP TABLE IF EXISTS customer.orgnos CASCADE;
CREATE TABLE customer.orgnos
(
  orgnoid BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  orgno   VARCHAR(191) NOT NULL,
  country INTEGER      NOT NULL,
  CONSTRAINT orgnos_pk PRIMARY KEY (orgnoid),
  CONSTRAINT orgnos_uq UNIQUE (orgno, country) DEFERRABLE INITIALLY IMMEDIATE
);
-- ddl-end --
ALTER TABLE customer.orgnos
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.settings | type: TABLE --
-- DROP TABLE IF EXISTS customer.settings CASCADE;
CREATE TABLE customer.settings
(
  settingid  BIGINT  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  customerid BIGINT  NOT NULL,
  languageid INTEGER NOT NULL DEFAULT 1,
  currencyid INTEGER NOT NULL,
  CONSTRAINT settings_pk PRIMARY KEY (settingid)
);
-- ddl-end --
ALTER TABLE customer.settings
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.payments | type: TABLE --
-- DROP TABLE IF EXISTS customer.payments CASCADE;
CREATE TABLE customer.payments
(
  paymentid BIGINT        NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  invoiceid INTEGER       NOT NULL,
  amount    NUMERIC(8, 0) NOT NULL,
  paydate   DATE          NOT NULL DEFAULT NOW(),
  CONSTRAINT payments_pk PRIMARY KEY (paymentid)
);
-- ddl-end --
ALTER TABLE customer.payments
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.entitytypes | type: TABLE --
-- DROP TABLE IF EXISTS customer.entitytypes CASCADE;
CREATE TABLE customer.entitytypes
(
  entitytypeid INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  CONSTRAINT entitytypes_pk PRIMARY KEY (entitytypeid)
);
-- ddl-end --
ALTER TABLE customer.entitytypes
  OWNER TO samizdat;
-- ddl-end --

-- object: customer.entitytypenames | type: TABLE --
-- DROP TABLE IF EXISTS customer.entitytypenames CASCADE;
CREATE TABLE customer.entitytypenames
(
  entitytypenameid INTEGER      NOT NULL,
  entitypeid       INTEGER      NOT NULL,
  languageid       INTEGER      NOT NULL,
  entityname       VARCHAR(191) NOT NULL,
  CONSTRAINT entitytypenames_pk PRIMARY KEY (entitytypenameid)
);
-- ddl-end --
ALTER TABLE customer.entitytypenames
  OWNER TO samizdat;
-- ddl-end --

-- object: invoiceitems_invoiceid_idx | type: INDEX --
-- DROP INDEX IF EXISTS customer.invoiceitems_invoiceid_idx CASCADE;
CREATE INDEX invoiceitems_invoiceid_idx ON customer.invoiceitems
  USING btree
  (
   invoiceid
    )
  INCLUDE (invoiceid);
-- ddl-end --

-- object: payments_invoiceid_idx | type: INDEX --
-- DROP INDEX IF EXISTS customer.payments_invoiceid_idx CASCADE;
CREATE INDEX payments_invoiceid_idx ON customer.payments
  USING btree
  (
   invoiceid
    )
  INCLUDE (invoiceid);
-- ddl-end --

-- object: entityroleusers_roleid_idx | type: INDEX --
-- DROP INDEX IF EXISTS customer.entityroleusers_roleid_idx CASCADE;
CREATE INDEX entityroleusers_roleid_idx ON customer.entityroleusers
  USING btree
  (
   roleid,
   userid
    )
  INCLUDE (roleid,customerid);
-- ddl-end --


-- [ Created foreign keys ] --
-- object: roles_fk | type: CONSTRAINT --
-- ALTER TABLE customer.entityroleusers DROP CONSTRAINT IF EXISTS roles_fk CASCADE;
ALTER TABLE customer.entityroleusers
  ADD CONSTRAINT roles_fk FOREIGN KEY (roleid)
    REFERENCES account.roles (roleid) MATCH FULL
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: users_fk | type: CONSTRAINT --
-- ALTER TABLE customer.entityroleusers DROP CONSTRAINT IF EXISTS users_fk CASCADE;
ALTER TABLE customer.entityroleusers
  ADD CONSTRAINT users_fk FOREIGN KEY (userid)
    REFERENCES account.users (userid) MATCH FULL
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: customers_fk | type: CONSTRAINT --
-- ALTER TABLE customer.entityroleusers DROP CONSTRAINT IF EXISTS customers_fk CASCADE;
ALTER TABLE customer.entityroleusers
  ADD CONSTRAINT customers_fk FOREIGN KEY (customerid)
    REFERENCES customer.customers (customerid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: customers_fk | type: CONSTRAINT --
-- ALTER TABLE customer.invoices DROP CONSTRAINT IF EXISTS customers_fk CASCADE;
ALTER TABLE customer.invoices
  ADD CONSTRAINT customers_fk FOREIGN KEY (invoiceid)
    REFERENCES customer.customers (customerid) MATCH SIMPLE
    ON DELETE NO ACTION ON UPDATE CASCADE;
-- ddl-end --

-- object: invoices_fk | type: CONSTRAINT --
-- ALTER TABLE customer.invoiceitems DROP CONSTRAINT IF EXISTS invoices_fk CASCADE;
ALTER TABLE customer.invoiceitems
  ADD CONSTRAINT invoices_fk FOREIGN KEY (invoiceitemid)
    REFERENCES customer.invoices (invoiceid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: contacts_fk | type: CONSTRAINT --
-- ALTER TABLE customer.customers DROP CONSTRAINT IF EXISTS contacts_fk CASCADE;
ALTER TABLE customer.customers
  ADD CONSTRAINT contacts_fk FOREIGN KEY (customerid)
    REFERENCES account.contacts (contactid) MATCH SIMPLE
    ON DELETE SET NULL ON UPDATE CASCADE;
-- ddl-end --

-- object: articles_fk | type: CONSTRAINT --
-- ALTER TABLE customer.invoiceitems DROP CONSTRAINT IF EXISTS articles_fk CASCADE;
ALTER TABLE customer.invoiceitems
  ADD CONSTRAINT articles_fk FOREIGN KEY (invoiceitemid)
    REFERENCES article.articles (articleid) MATCH SIMPLE
    ON DELETE SET NULL ON UPDATE NO ACTION;
-- ddl-end --

-- object: currencies_fk | type: CONSTRAINT --
-- ALTER TABLE customer.invoices DROP CONSTRAINT IF EXISTS currencies_fk CASCADE;
ALTER TABLE customer.invoices
  ADD CONSTRAINT currencies_fk FOREIGN KEY (currencyid)
    REFERENCES public.currencies (currencyid) MATCH SIMPLE
    ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: orgnos_fk | type: CONSTRAINT --
-- ALTER TABLE customer.customers DROP CONSTRAINT IF EXISTS orgnos_fk CASCADE;
ALTER TABLE customer.customers
  ADD CONSTRAINT orgnos_fk FOREIGN KEY (orgnoid)
    REFERENCES customer.orgnos (orgnoid) MATCH SIMPLE
    ON DELETE SET NULL ON UPDATE NO ACTION;
-- ddl-end --

-- object: customers_fk | type: CONSTRAINT --
-- ALTER TABLE customer.settings DROP CONSTRAINT IF EXISTS customers_fk CASCADE;
ALTER TABLE customer.settings
  ADD CONSTRAINT customers_fk FOREIGN KEY (customerid)
    REFERENCES customer.customers (customerid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: invoices_fk | type: CONSTRAINT --
-- ALTER TABLE customer.payments DROP CONSTRAINT IF EXISTS invoices_fk CASCADE;
ALTER TABLE customer.payments
  ADD CONSTRAINT invoices_fk FOREIGN KEY (invoiceid)
    REFERENCES customer.invoices (invoiceid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: entitytypes_fk | type: CONSTRAINT --
-- ALTER TABLE customer.customers DROP CONSTRAINT IF EXISTS entitytypes_fk CASCADE;
ALTER TABLE customer.customers
  ADD CONSTRAINT entitytypes_fk FOREIGN KEY (entitytypeid)
    REFERENCES customer.entitytypes (entitytypeid) MATCH SIMPLE
    ON DELETE SET NULL ON UPDATE NO ACTION;
-- ddl-end --

-- object: entitytypes_fk | type: CONSTRAINT --
-- ALTER TABLE customer.entitytypenames DROP CONSTRAINT IF EXISTS entitytypes_fk CASCADE;
ALTER TABLE customer.entitytypenames
  ADD CONSTRAINT entitytypes_fk FOREIGN KEY (entitypeid)
    REFERENCES customer.entitytypes (entitytypeid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE customer.entitytypenames DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE customer.entitytypenames
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: countries_fk | type: CONSTRAINT --
-- ALTER TABLE customer.orgnos DROP CONSTRAINT IF EXISTS countries_fk CASCADE;
ALTER TABLE customer.orgnos
  ADD CONSTRAINT countries_fk FOREIGN KEY (country)
    REFERENCES public.countries (countryid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE customer.settings DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE customer.settings
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: currencies_fk | type: CONSTRAINT --
-- ALTER TABLE customer.settings DROP CONSTRAINT IF EXISTS currencies_fk CASCADE;
ALTER TABLE customer.settings
  ADD CONSTRAINT currencies_fk FOREIGN KEY (currencyid)
    REFERENCES public.currencies (currencyid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE DEFERRABLE INITIALLY IMMEDIATE;
-- ddl-end --

