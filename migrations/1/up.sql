ALTER USER samizdat SET search_path TO web;

SET search_path TO pg_catalog,public,account,web;

CREATE TYPE public."position" AS
    ENUM ('current','next','previous');
ALTER TYPE public."position" OWNER TO "samizdat";

CREATE TABLE account.contacts
(
    id           integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    email        character varying NOT NULL,
    givenname    character varying,
    commonname   character varying,
    displayname  character varying NOT NULL DEFAULT '',
    organization character varying,
    address      character varying,
    pc           character varying,
    city         char(63),
    telephone    character varying(31),
    mobile       character varying(31),
    website      character varying,
    dob          date,
    countrys_id  integer,
    languages_id integer           NOT NULL,
    states_id    integer,
    orgnos_id    integer,
    CONSTRAINT contactname_pk PRIMARY KEY (id)

);
COMMENT ON COLUMN account.contacts.email IS E'Epostadress';
COMMENT ON COLUMN account.contacts.givenname IS E'Förnamn';
COMMENT ON COLUMN account.contacts.commonname IS E'Efternamn';
COMMENT ON COLUMN account.contacts.organization IS E'Företag/Organisation';
COMMENT ON COLUMN account.contacts.address IS E'Gatuadress';
COMMENT ON COLUMN account.contacts.pc IS E'Postnummer';
COMMENT ON COLUMN account.contacts.city IS E'Postort';
COMMENT ON COLUMN account.contacts.telephone IS E'Telefon';
COMMENT ON COLUMN account.contacts.mobile IS E'Mobiltelefon';
COMMENT ON COLUMN account.contacts.website IS E'Webbplats';
COMMENT ON COLUMN account.contacts.dob IS E'Födelsedag';
ALTER TABLE account.contacts
    OWNER TO "samizdat";

CREATE TABLE account.passwords
(
    id                  integer                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    passwordmysqlcrypt  character varying,
    passwordsha512crypt character varying,
    passwordpbkdf2crypt character varying,
    passwordbcrypt      character varying,
    passwordargon2crypt character varying,
    changed             timestamp with time zone NOT NULL DEFAULT now(),
    users_id            integer                  NOT NULL,
    CONSTRAINT userpasswords_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.passwords IS E'Lösenord';
COMMENT ON COLUMN account.passwords.changed IS E'Ändrat senast';
ALTER TABLE account.passwords
    OWNER TO "samizdat";

CREATE TABLE account.roles
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT roles_pk PRIMARY KEY (id)

);
ALTER TABLE account.roles
    OWNER TO "samizdat";

CREATE TABLE web.resources
(
    id            integer                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    alias         character varying        NOT NULL DEFAULT '',
    title         character varying(191)   NOT NULL DEFAULT '',
    description   character varying        NOT NULL DEFAULT '',
    content       text                     NOT NULL DEFAULT '',
    owner         integer                  NOT NULL,
    creator       integer,
    publisher     integer,
    parent        integer,
    resourcealias integer,
    contenttype   integer                  NOT NULL DEFAULT 1,
    languages_id  integer                  NOT NULL,
    created       timestamp with time zone NOT NULL DEFAULT now(),
    modified      timestamp with time zone NOT NULL DEFAULT now(),
    published     timestamp with time zone,
    comments      integer                  NOT NULL DEFAULT 0,
    templates_id  integer                  NOT NULL,
    CONSTRAINT content_pk PRIMARY KEY (id)

);
COMMENT ON COLUMN web.resources.alias IS E'Sidalias';
COMMENT ON COLUMN web.resources.title IS E'Sidtitel';
COMMENT ON COLUMN web.resources.description IS E'Beskrivning';
COMMENT ON COLUMN web.resources.content IS E'Sidtext';
COMMENT ON COLUMN web.resources.resourcealias IS E'Självreferens';
ALTER TABLE web.resources
    OWNER TO "samizdat";

CREATE TABLE web.menuitems
(
    id         integer                NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    title      character varying(191) NOT NULL DEFAULT '',
    parent     integer                         DEFAULT 0,
    "position" smallint               NOT NULL DEFAULT 0,
    uris_id    integer,
    menus_id   integer                NOT NULL,
    children   integer                NOT NULL DEFAULT 0,
    CONSTRAINT menuitem_pk PRIMARY KEY (id)

);
ALTER TABLE web.menuitems
    OWNER TO "samizdat";

CREATE TABLE web.contenttypes
(
    id       integer               NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name     character varying     NOT NULL,
    mimetype character varying(31) NOT NULL,
    CONSTRAINT contenttype_pk PRIMARY KEY (id),
    CONSTRAINT type_uq UNIQUE (mimetype)

);
ALTER TABLE web.contenttypes
    OWNER TO "samizdat";

CREATE TABLE web.comments
(
    id           integer                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    parent       integer,
    resources_id integer                  NOT NULL,
    created      timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT comment_pk PRIMARY KEY (id)

);
ALTER TABLE web.comments
    OWNER TO "samizdat";

ALTER TABLE web.comments
    ADD CONSTRAINT resources_fk FOREIGN KEY (resources_id)
        REFERENCES web.resources (id) MATCH FULL
        ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE web.menus
(
    id   integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying NOT NULL DEFAULT '',
    CONSTRAINT menu_pk PRIMARY KEY (id),
    CONSTRAINT name_uq UNIQUE (name)

);
COMMENT ON COLUMN web.menus.name IS E'Menynamn';
ALTER TABLE web.menus
    OWNER TO "samizdat";

CREATE TABLE web.uris
(
    id           integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    path         character varying NOT NULL DEFAULT '',
    resources_id integer,
    CONSTRAINT uri_pk PRIMARY KEY (id),
    CONSTRAINT path_uq UNIQUE (path)

);
ALTER TABLE web.uris
    OWNER TO "samizdat";

CREATE TABLE account.messages
(
    id           integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    recipient_id integer NOT NULL,
    sender_id    integer,
    contents     jsonb   NOT NULL,
    viewed       boolean NOT NULL         DEFAULT false,
    created      timestamp with time zone DEFAULT now(),
    modified     timestamp with time zone,
    CONSTRAINT messages_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.messages IS E'Meddelanden';
ALTER TABLE account.messages
    OWNER TO "samizdat";

CREATE TABLE account.userbans
(
    id     integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    banner integer NOT NULL,
    banned integer NOT NULL,
    CONSTRAINT userbans_pk PRIMARY KEY (id)

);
ALTER TABLE account.userbans
    OWNER TO "samizdat";

ALTER TABLE web.uris
    ADD CONSTRAINT resources_fk FOREIGN KEY (resources_id)
        REFERENCES web.resources (id) MATCH FULL
        ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE web.menuitems
    ADD CONSTRAINT uris_fk FOREIGN KEY (uris_id)
        REFERENCES web.uris (id) MATCH FULL
        ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE web.contexts
(
    id   integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying NOT NULL,
    CONSTRAINT contextname_uq UNIQUE (name),
    CONSTRAINT contexts_pk PRIMARY KEY (id)

);

CREATE TABLE public.countrys
(
    id            integer              NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    cc            character varying(3) NOT NULL,
    pcformat      character varying,
    pcregex       character varying,
    svgflag       character varying,
    geonameid     integer,
    tld           character varying,
    phone         character varying,
    continents_id integer              NOT NULL,
    CONSTRAINT cc_uq UNIQUE (cc),
    CONSTRAINT countries_pk PRIMARY KEY (id)

);
COMMENT ON COLUMN public.countrys.cc IS E'Landskod';
COMMENT ON COLUMN public.countrys.pcformat IS E'Postnummerformat';
COMMENT ON COLUMN public.countrys.pcregex IS E'Postnummeruttryck';
COMMENT ON COLUMN public.countrys.tld IS E'Toppdomän';
ALTER TABLE public.countrys
    OWNER TO "samizdat";

CREATE TABLE public.vatrates
(
    id          integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    rate        float   NOT NULL DEFAULT 0.00,
    countrys_id integer NOT NULL,
    CONSTRAINT vatdata_pk PRIMARY KEY (id)

);
ALTER TABLE public.vatrates
    OWNER TO "samizdat";

CREATE TABLE public.states
(
    id          integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    countrys_id integer NOT NULL,
    CONSTRAINT states_pk PRIMARY KEY (id)

);
ALTER TABLE public.states
    OWNER TO "samizdat";

CREATE TABLE account.loginfailures
(
    id          integer                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    ip          inet                     NOT NULL,
    username    character varying(31)    NOT NULL DEFAULT '',
    failuretime timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT loginfailures_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.loginfailures IS E'Misslyckade inloggningar';
COMMENT ON COLUMN account.loginfailures.ip IS E'IP-nummer';
COMMENT ON COLUMN account.loginfailures.username IS E'Inloggningsnamn';
COMMENT ON COLUMN account.loginfailures.failuretime IS E'Tidpunkt';
ALTER TABLE account.loginfailures
    OWNER TO "samizdat";

CREATE INDEX ip_ix ON account.loginfailures
    USING btree
    (
     ip
        );

ALTER TABLE public.states
    ADD CONSTRAINT countrys_fk FOREIGN KEY (countrys_id)
        REFERENCES public.countrys (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE public.vatrates
    ADD CONSTRAINT countrys_fk FOREIGN KEY (countrys_id)
        REFERENCES public.countrys (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE public.vatrates
    ADD CONSTRAINT vatrates_uq UNIQUE (countrys_id);

CREATE TABLE public.languages
(
    id   integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    code character varying,
    CONSTRAINT languages_pk PRIMARY KEY (id)

);
ALTER TABLE public.languages
    OWNER TO "samizdat";

INSERT INTO public.languages (id, code)
VALUES (E'1', E'sv');
INSERT INTO public.languages (id, code)
VALUES (E'2', E'en');

CREATE TABLE public.languagenames
(
    id           integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    languagename character varying,
    languages_id integer NOT NULL,
    CONSTRAINT languagenames_pk PRIMARY KEY (id)

);
ALTER TABLE public.languagenames
    OWNER TO "samizdat";

INSERT INTO public.languagenames (id, languagename, languages_id)
VALUES (E'1', E'Svenska', E'1');
INSERT INTO public.languagenames (id, languagename, languages_id)
VALUES (E'2', E'Swedish', E'1');
INSERT INTO public.languagenames (id, languagename, languages_id)
VALUES (E'3', E'Engelska', E'2');
INSERT INTO public.languagenames (id, languagename, languages_id)
VALUES (E'4', E'English', E'2');

CREATE TABLE public.countrynames
(
    id           integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    countryname  character varying NOT NULL,
    languages_id integer           NOT NULL,
    countrys_id  integer           NOT NULL,
    CONSTRAINT countrynames_pk PRIMARY KEY (id)

);
COMMENT ON TABLE public.countrynames IS E'Landsnamn';
COMMENT ON COLUMN public.countrynames.countryname IS E'Land';
ALTER TABLE public.countrynames
    OWNER TO "samizdat";

ALTER TABLE public.countrynames
    ADD CONSTRAINT countrys_fk FOREIGN KEY (countrys_id)
        REFERENCES public.countrys (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE public.statenames
(
    id           integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    statename    character varying NOT NULL,
    states_id    integer           NOT NULL,
    languages_id integer           NOT NULL,
    CONSTRAINT statenames_pk PRIMARY KEY (id)

);
COMMENT ON COLUMN public.statenames.statename IS E'Stat';
ALTER TABLE public.statenames
    OWNER TO "samizdat";

ALTER TABLE public.statenames
    ADD CONSTRAINT states_fk FOREIGN KEY (states_id)
        REFERENCES public.states (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE account.users
(
    id           integer               NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    username     character varying(31) NOT NULL,
    deleted      boolean               NOT NULL DEFAULT false,
    blocked      boolean               NOT NULL DEFAULT false,
    activated    boolean               NOT NULL DEFAULT false,
    created      timestamp with time zone       DEFAULT now(),
    modified     timestamp with time zone,
    checked      bool                  NOT NULL DEFAULT false,
    customers_id integer,
    contacts_id  integer               NOT NULL,
    CONSTRAINT username_uq UNIQUE (username),
    CONSTRAINT userlogin_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.users IS E'Användare';
COMMENT ON COLUMN account.users.username IS E'Inloggningsnamn';
COMMENT ON COLUMN account.users.created IS E'Skapad';
COMMENT ON COLUMN account.users.checked IS E'Åtgärdad';
COMMENT ON COLUMN account.users.customers_id IS E'Aktiv kundrelation';
ALTER TABLE account.users
    OWNER TO "samizdat";

CREATE TABLE public.languagevariants
(
    id           integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    variant      character varying,
    languages_id integer NOT NULL,
    CONSTRAINT languagevariants_pk PRIMARY KEY (id)

);
ALTER TABLE public.languagevariants
    OWNER TO "samizdat";

ALTER TABLE public.languagenames
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE public.statenames
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE public.countrynames
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE web.settings
(
    id    integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    key   character varying NOT NULL,
    value character varying NOT NULL,
    CONSTRAINT key_uq UNIQUE (key),
    CONSTRAINT settings_pk PRIMARY KEY (id)

);
ALTER TABLE web.settings
    OWNER TO "samizdat";

ALTER TABLE account.passwords
    ADD CONSTRAINT users_fk FOREIGN KEY (users_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.passwords
    ADD CONSTRAINT passwords_uq UNIQUE (users_id);

CREATE TABLE account.logins
(
    id        integer                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    users_id  integer                  NOT NULL,
    logintime timestamp with time zone NOT NULL DEFAULT now(),
    active    bool                     NOT NULL DEFAULT true,
    ip        inet                     NOT NULL,
    CONSTRAINT logins_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.logins IS E'Inloggningar';
COMMENT ON COLUMN account.logins.logintime IS E'Tidpunkt';
COMMENT ON COLUMN account.logins.ip IS E'IP-nummer';
ALTER TABLE account.logins
    OWNER TO "samizdat";

ALTER TABLE account.logins
    ADD CONSTRAINT users_fk FOREIGN KEY (users_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE public.languagevariants
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE public.exchangerates
(
    id           integer                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    currencys_id integer                  NOT NULL,
    rate         decimal(4)               NOT NULL,
    ratedate     timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT exchangerates_pk PRIMARY KEY (id)

);
ALTER TABLE public.exchangerates
    OWNER TO "samizdat";

CREATE TABLE public.currencys
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT currencys_pk PRIMARY KEY (id)

);
ALTER TABLE public.currencys
    OWNER TO "samizdat";

ALTER TABLE public.exchangerates
    ADD CONSTRAINT currencys_fk FOREIGN KEY (currencys_id)
        REFERENCES public.currencys (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE public.currencynames
(
    id           integer               NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name         character varying(15) NOT NULL,
    languages_id integer               NOT NULL,
    currencys_id integer               NOT NULL,
    format       character varying(31),
    CONSTRAINT currencynames_pk PRIMARY KEY (id)

);
ALTER TABLE public.currencynames
    OWNER TO "samizdat";

ALTER TABLE public.currencynames
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE public.currencynames
    ADD CONSTRAINT currencys_fk FOREIGN KEY (currencys_id)
        REFERENCES public.currencys (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE public.addressformats
(
    id          integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    format      character varying(255),
    countrys_id integer NOT NULL,
    CONSTRAINT addressformats_pk PRIMARY KEY (id)

);
ALTER TABLE public.addressformats
    OWNER TO "samizdat";

ALTER TABLE public.addressformats
    ADD CONSTRAINT countrys_fk FOREIGN KEY (countrys_id)
        REFERENCES public.countrys (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE web.resources
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE web.menuitems
    ADD CONSTRAINT menus_fk FOREIGN KEY (menus_id)
        REFERENCES web.menus (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE account.rolenames
(
    id           integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name         character varying NOT NULL DEFAULT '',
    languages_id integer           NOT NULL,
    roles_id     integer           NOT NULL,
    CONSTRAINT rolenames_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.rolenames IS E'Roller';
COMMENT ON COLUMN account.rolenames.name IS E'Roll';
ALTER TABLE account.rolenames
    OWNER TO "samizdat";

ALTER TABLE account.rolenames
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.rolenames
    ADD CONSTRAINT roles_fk FOREIGN KEY (roles_id)
        REFERENCES account.roles (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE account.rolesusers
(
    id           integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    roles_id     integer NOT NULL,
    users_id     integer NOT NULL,
    customers_id integer,
    CONSTRAINT rolesusers_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.rolesusers IS E'Rollanvändare';
ALTER TABLE account.rolesusers
    OWNER TO "samizdat";

ALTER TABLE account.rolesusers
    ADD CONSTRAINT roles_fk FOREIGN KEY (roles_id)
        REFERENCES account.roles (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.rolesusers
    ADD CONSTRAINT users_fk FOREIGN KEY (users_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE account.presentations
(
    id           integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    presentation char,
    users_id     integer NOT NULL,
    languages_id integer NOT NULL,
    CONSTRAINT presentations_pk PRIMARY KEY (id)

);
COMMENT ON COLUMN account.presentations.presentation IS E'Presentation';
ALTER TABLE account.presentations
    OWNER TO "samizdat";

ALTER TABLE account.presentations
    ADD CONSTRAINT users_fk FOREIGN KEY (users_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.presentations
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

CREATE TABLE account.images
(
    id           integer     NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    profileimage bit varying NOT NULL,
    users_id     integer     NOT NULL,
    filename     character varying,
    CONSTRAINT images_pk PRIMARY KEY (id)

);
COMMENT ON TABLE account.images IS E'Profilbild';
COMMENT ON COLUMN account.images.profileimage IS E'Profilbild';
ALTER TABLE account.images
    OWNER TO "samizdat";

ALTER TABLE account.images
    ADD CONSTRAINT users_fk FOREIGN KEY (users_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.images
    ADD CONSTRAINT images_uq UNIQUE (users_id);

CREATE TABLE web.templates
(
    id   integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    path character varying NOT NULL DEFAULT 'templates/default.html.ep',
    CONSTRAINT templatespath_uq UNIQUE (path),
    CONSTRAINT templates_pk PRIMARY KEY (id)

);
COMMENT ON TABLE web.templates IS E'Mallar';
COMMENT ON COLUMN web.templates.path IS E'Sökväg till mall';
ALTER TABLE web.templates
    OWNER TO "samizdat";

ALTER TABLE web.resources
    ADD CONSTRAINT templates_fk FOREIGN KEY (templates_id)
        REFERENCES web.templates (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE RESTRICT;

CREATE TABLE account.displayfields
(
    id           integer             NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    fieldnames   character varying[] NOT NULL,
    displaylevel smallint            NOT NULL DEFAULT 0,
    users_id     integer             NOT NULL,
    CONSTRAINT displayfields_pk PRIMARY KEY (id)

);
ALTER TABLE account.displayfields
    OWNER TO "samizdat";

ALTER TABLE account.displayfields
    ADD CONSTRAINT users_fk FOREIGN KEY (users_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.users
    ADD CONSTRAINT contacts_fk FOREIGN KEY (contacts_id)
        REFERENCES account.contacts (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.users
    ADD CONSTRAINT users_uq UNIQUE (contacts_id);


CREATE TABLE account.groups
(
    id        integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    groupname varchar NOT NULL,
    creator   integer DEFAULT null,
    updater   integer DEFAULT null,
    CONSTRAINT groups_pk PRIMARY KEY (id),
    CONSTRAINT groupname_uq UNIQUE (groupname)

);

CREATE TABLE account.usergroups
(
    id        integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    users_id  integer NOT NULL,
    groups_id integer NOT NULL,
    CONSTRAINT users_groups_pk PRIMARY KEY (id)

);


CREATE TABLE public.continents
(
    id        integer           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    continent character varying NOT NULL,
    code      character varying NOT NULL,
    CONSTRAINT continents_pk PRIMARY KEY (id)

);
COMMENT ON TABLE public.continents IS E'Kontinenter';
COMMENT ON COLUMN public.continents.continent IS E'Kontinent';
COMMENT ON COLUMN public.continents.code IS E'Kontinentkod';
ALTER TABLE public.continents
    OWNER TO "samizdat";

ALTER TABLE public.countrys
    ADD CONSTRAINT continents_fk FOREIGN KEY (continents_id)
        REFERENCES public.continents (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.contacts
    ADD CONSTRAINT languages_fk FOREIGN KEY (languages_id)
        REFERENCES public.languages (id) MATCH FULL
        ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE account.contacts
    ADD CONSTRAINT countrys_fk FOREIGN KEY (countrys_id)
        REFERENCES public.countrys (id) MATCH FULL
        ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE account.contacts
    ADD CONSTRAINT states_fk FOREIGN KEY (states_id)
        REFERENCES public.states (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE CASCADE;

ALTER TABLE web.resources
    ADD CONSTRAINT parent_fk FOREIGN KEY (parent)
        REFERENCES web.resources (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.resources
    ADD CONSTRAINT resourcealias_fk FOREIGN KEY (resourcealias)
        REFERENCES web.resources (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.resources
    ADD CONSTRAINT contenttype_fk FOREIGN KEY (contenttype)
        REFERENCES web.contenttypes (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.resources
    ADD CONSTRAINT owner_fk FOREIGN KEY (owner)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.resources
    ADD CONSTRAINT creator_fk FOREIGN KEY (creator)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.resources
    ADD CONSTRAINT publisher_fk FOREIGN KEY (publisher)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.menuitems
    ADD CONSTRAINT parent_fk FOREIGN KEY (parent)
        REFERENCES web.menuitems (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE web.comments
    ADD CONSTRAINT parent_fk FOREIGN KEY (parent)
        REFERENCES web.comments (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE account.messages
    ADD CONSTRAINT recipient_fk FOREIGN KEY (recipient_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE account.messages
    ADD CONSTRAINT sender_fk FOREIGN KEY (sender_id)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE NO ACTION ON UPDATE CASCADE;

ALTER TABLE account.userbans
    ADD CONSTRAINT banner_id FOREIGN KEY (banner)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE account.userbans
    ADD CONSTRAINT banned_id FOREIGN KEY (banned)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE account.groups
    ADD CONSTRAINT creator_fk FOREIGN KEY (creator)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE SET NULL ON UPDATE NO ACTION;

ALTER TABLE account.groups
    ADD CONSTRAINT updater_fk FOREIGN KEY (updater)
        REFERENCES account.users (id) MATCH FULL
        ON DELETE SET NULL ON UPDATE NO ACTION;




