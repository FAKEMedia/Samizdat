-- Diff code generated with pgModeler (PostgreSQL Database Modeler)
-- pgModeler version: 0.9.4
-- Diff date: 2024-05-23 21:39:57
-- Source model: samizdat
-- Database: samizdat
-- PostgreSQL version: 13.0

-- [ Diff summary ]
-- Dropped objects: 0
-- Created objects: 30
-- Changed objects: 0

SET search_path = public,pg_catalog;
-- ddl-end --


-- [ Created objects ] --
-- object: public.countries | type: TABLE --
-- DROP TABLE IF EXISTS public.countries CASCADE;
CREATE TABLE public.countries
(
  countryid     INTEGER              NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  cc            CHARACTER VARYING(3) NOT NULL,
  pcformat      CHARACTER VARYING,
  addressformat CHARACTER VARYING,
  geonameid     INTEGER,
  tld           CHARACTER VARYING,
  phone         CHARACTER VARYING,
  start_of_week VARCHAR(9)           NOT NULL DEFAULT 'monday',
  continentid   INTEGER,
  currencyid    INTEGER              NOT NULL DEFAULT 0,
  svgflag       CHARACTER VARYING,
  CONSTRAINT countries_pk PRIMARY KEY (countryid),
  CONSTRAINT cc_uq UNIQUE (cc)
);
-- ddl-end --
ALTER TABLE public.countries
  OWNER TO samizdat;
-- ddl-end --

-- object: public.vatrates | type: TABLE --
-- DROP TABLE IF EXISTS public.vatrates CASCADE;
CREATE TABLE public.vatrates
(
  vatrateid INTEGER          NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  rate      DOUBLE PRECISION NOT NULL DEFAULT 0.00,
  countryid INTEGER          NOT NULL,
  CONSTRAINT vatrates_pk PRIMARY KEY (vatrateid)
);
-- ddl-end --
ALTER TABLE public.vatrates
  OWNER TO samizdat;
-- ddl-end --

-- object: public.states | type: TABLE --
-- DROP TABLE IF EXISTS public.states CASCADE;
CREATE TABLE public.states
(
  stateid   INTEGER           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  code      CHARACTER VARYING NOT NULL,
  countryid INTEGER           NOT NULL,
  type      CHARACTER VARYING NOT NULL,
  svgflag   CHARACTER VARYING,
  CONSTRAINT states_pk PRIMARY KEY (stateid)
);
-- ddl-end --
ALTER TABLE public.states
  OWNER TO samizdat;
-- ddl-end --

-- object: public.languages | type: TABLE --
-- DROP TABLE IF EXISTS public.languages CASCADE;
CREATE TABLE public.languages
(
  languageid INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  code       CHARACTER VARYING,
  CONSTRAINT languages_pk PRIMARY KEY (languageid),
  CONSTRAINT code_uq UNIQUE (code)
);
-- ddl-end --
ALTER TABLE public.languages
  OWNER TO samizdat;
-- ddl-end --

-- object: public.languagenames | type: TABLE --
-- DROP TABLE IF EXISTS public.languagenames CASCADE;
CREATE TABLE public.languagenames
(
  languagenameid INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  languagename   CHARACTER VARYING,
  languageid     INTEGER NOT NULL,
  language       INTEGER NOT NULL,
  CONSTRAINT languagenames_pk PRIMARY KEY (languagenameid),
  CONSTRAINT name_uq UNIQUE (languageid, language)
);
-- ddl-end --
ALTER TABLE public.languagenames
  OWNER TO samizdat;
-- ddl-end --

-- object: public.countrynames | type: TABLE --
-- DROP TABLE IF EXISTS public.countrynames CASCADE;
CREATE TABLE public.countrynames
(
  countrynameid INTEGER           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  countryname   CHARACTER VARYING NOT NULL,
  languageid    INTEGER           NOT NULL,
  countryid     INTEGER           NOT NULL,
  CONSTRAINT countrynames_pk PRIMARY KEY (countrynameid)
);
-- ddl-end --
ALTER TABLE public.countrynames
  OWNER TO samizdat;
-- ddl-end --

-- object: public.statenames | type: TABLE --
-- DROP TABLE IF EXISTS public.statenames CASCADE;
CREATE TABLE public.statenames
(
  statenameid INTEGER           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  statename   CHARACTER VARYING NOT NULL,
  stateid     INTEGER           NOT NULL,
  languageid  INTEGER           NOT NULL DEFAULT 1,
  CONSTRAINT statenames_pk PRIMARY KEY (statenameid)
);
-- ddl-end --
COMMENT ON COLUMN public.statenames.statename IS E'Stat';
-- ddl-end --
ALTER TABLE public.statenames
  OWNER TO samizdat;
-- ddl-end --

-- object: public.languagevariants | type: TABLE --
-- DROP TABLE IF EXISTS public.languagevariants CASCADE;
CREATE TABLE public.languagevariants
(
  languagevariantid INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  variant           CHARACTER VARYING,
  languageid        INTEGER NOT NULL,
  CONSTRAINT languagevariants_pk PRIMARY KEY (languagevariantid)
);
-- ddl-end --
ALTER TABLE public.languagevariants
  OWNER TO samizdat;
-- ddl-end --

-- object: public.exchangerates | type: TABLE --
-- DROP TABLE IF EXISTS public.exchangerates CASCADE;
CREATE TABLE public.exchangerates
(
  exchangerateid INTEGER                  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  currencyid     INTEGER                  NOT NULL,
  rate           NUMERIC(4, 0)            NOT NULL,
  ratedate       TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(),
  CONSTRAINT exchangerates_pk PRIMARY KEY (exchangerateid)
);
-- ddl-end --
ALTER TABLE public.exchangerates
  OWNER TO samizdat;
-- ddl-end --

-- object: public.currencies | type: TABLE --
-- DROP TABLE IF EXISTS public.currencies CASCADE;
CREATE TABLE public.currencies
(
  currencyid INTEGER           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  symbol     CHARACTER VARYING NOT NULL,
  CONSTRAINT currencies_pk PRIMARY KEY (currencyid)
);
-- ddl-end --
ALTER TABLE public.currencies
  OWNER TO samizdat;
-- ddl-end --

-- object: public.currencynames | type: TABLE --
-- DROP TABLE IF EXISTS public.currencynames CASCADE;
CREATE TABLE public.currencynames
(
  currencynameid INTEGER               NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name           CHARACTER VARYING(15) NOT NULL,
  languageid     INTEGER               NOT NULL,
  currencyid     INTEGER               NOT NULL,
  format         CHARACTER VARYING(31),
  CONSTRAINT currencynames_pk PRIMARY KEY (currencynameid)
);
-- ddl-end --
ALTER TABLE public.currencynames
  OWNER TO samizdat;
-- ddl-end --

-- object: public.continents | type: TABLE --
-- DROP TABLE IF EXISTS public.continents CASCADE;
CREATE TABLE public.continents
(
  continentid INTEGER           NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  continent   CHARACTER VARYING NOT NULL,
  code        CHARACTER VARYING NOT NULL,
  CONSTRAINT continents_pk PRIMARY KEY (continentid)
);
-- ddl-end --
ALTER TABLE public.continents
  OWNER TO samizdat;
-- ddl-end --

-- object: statenames_languageid_idx | type: INDEX --
-- DROP INDEX IF EXISTS public.statenames_languageid_idx CASCADE;
CREATE INDEX statenames_languageid_idx ON public.statenames
  USING btree
  (
   languageid ASC NULLS LAST
    )
  INCLUDE (languageid);
-- ddl-end --

-- object: languagenames_language_idx | type: INDEX --
-- DROP INDEX IF EXISTS public.languagenames_language_idx CASCADE;
CREATE INDEX languagenames_language_idx ON public.languagenames
  USING btree
  (
   language ASC NULLS LAST
    );
-- ddl-end --

-- object: countrynames_languageid_idx | type: INDEX --
-- DROP INDEX IF EXISTS public.countrynames_languageid_idx CASCADE;
CREATE INDEX countrynames_languageid_idx ON public.countrynames
  USING btree
  (
   languageid ASC NULLS LAST
    );
-- ddl-end --

-- object: states_countryid_idx | type: INDEX --
-- DROP INDEX IF EXISTS public.states_countryid_idx CASCADE;
CREATE INDEX states_countryid_idx ON public.states
  USING btree
  (
   countryid ASC NULLS LAST
    );
-- ddl-end --


-- [ Created foreign keys ] --
-- object: continents_fk | type: CONSTRAINT --
-- ALTER TABLE public.countries DROP CONSTRAINT IF EXISTS continents_fk CASCADE;
ALTER TABLE public.countries
  ADD CONSTRAINT continents_fk FOREIGN KEY (continentid)
    REFERENCES public.continents (continentid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: currencies_fk | type: CONSTRAINT --
-- ALTER TABLE public.countries DROP CONSTRAINT IF EXISTS currencies_fk CASCADE;
ALTER TABLE public.countries
  ADD CONSTRAINT currencies_fk FOREIGN KEY (currencyid)
    REFERENCES public.currencies (currencyid) MATCH SIMPLE
    ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: countries_fk | type: CONSTRAINT --
-- ALTER TABLE public.vatrates DROP CONSTRAINT IF EXISTS countries_fk CASCADE;
ALTER TABLE public.vatrates
  ADD CONSTRAINT countries_fk FOREIGN KEY (countryid)
    REFERENCES public.countries (countryid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: countries_fk | type: CONSTRAINT --
-- ALTER TABLE public.states DROP CONSTRAINT IF EXISTS countries_fk CASCADE;
ALTER TABLE public.states
  ADD CONSTRAINT countries_fk FOREIGN KEY (countryid)
    REFERENCES public.countries (countryid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE public.languagenames DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE public.languagenames
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH FULL
    ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: lang_fk | type: CONSTRAINT --
-- ALTER TABLE public.languagenames DROP CONSTRAINT IF EXISTS lang_fk CASCADE;
ALTER TABLE public.languagenames
  ADD CONSTRAINT lang_fk FOREIGN KEY (language)
    REFERENCES public.languages (languageid) MATCH FULL
    ON DELETE CASCADE ON UPDATE NO ACTION;
-- ddl-end --

-- object: countries_fk | type: CONSTRAINT --
-- ALTER TABLE public.countrynames DROP CONSTRAINT IF EXISTS countries_fk CASCADE;
ALTER TABLE public.countrynames
  ADD CONSTRAINT countries_fk FOREIGN KEY (countryid)
    REFERENCES public.countries (countryid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE public.countrynames DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE public.countrynames
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: states_fk | type: CONSTRAINT --
-- ALTER TABLE public.statenames DROP CONSTRAINT IF EXISTS states_fk CASCADE;
ALTER TABLE public.statenames
  ADD CONSTRAINT states_fk FOREIGN KEY (stateid)
    REFERENCES public.states (stateid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE public.statenames DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE public.statenames
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE public.languagevariants DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE public.languagevariants
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: currencies_fk | type: CONSTRAINT --
-- ALTER TABLE public.exchangerates DROP CONSTRAINT IF EXISTS currencies_fk CASCADE;
ALTER TABLE public.exchangerates
  ADD CONSTRAINT currencies_fk FOREIGN KEY (currencyid)
    REFERENCES public.currencies (currencyid) MATCH FULL
    ON DELETE RESTRICT ON UPDATE CASCADE;
-- ddl-end --

-- object: currencies_fk | type: CONSTRAINT --
-- ALTER TABLE public.currencynames DROP CONSTRAINT IF EXISTS currencies_fk CASCADE;
ALTER TABLE public.currencynames
  ADD CONSTRAINT currencies_fk FOREIGN KEY (currencyid)
    REFERENCES public.currencies (currencyid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --

-- object: languages_fk | type: CONSTRAINT --
-- ALTER TABLE public.currencynames DROP CONSTRAINT IF EXISTS languages_fk CASCADE;
ALTER TABLE public.currencynames
  ADD CONSTRAINT languages_fk FOREIGN KEY (languageid)
    REFERENCES public.languages (languageid) MATCH SIMPLE
    ON DELETE CASCADE ON UPDATE CASCADE;
-- ddl-end --


INSERT INTO public.languages(languageid, code)
VALUES
  (1, 'en');
INSERT INTO public.languagenames(languagenameid, languagename, languageid, language)
VALUES
  (1, 'English', 1, 1);
